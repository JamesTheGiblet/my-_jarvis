# Proposed new skill generated by Praxis on 2025-06-11T20:59:26.063764
# Task: Create a skill to set an alarm. The skill should take as input the time for the alarm (in HH:MM format), and optionally a description or label for the alarm.  It should then store the alarm information, and ideally, at the specified time, trigger a notification or other action (this latter part might require system integration beyond the scope of this immediate task).

# skills/set_alarm_skill.py
# (Generated by Praxis Autonomous Learning Agent)

import logging
import datetime

logging.basicConfig(level=logging.INFO)

def newly_learned_skill(context: Any, alarm_time: str, alarm_description: str = ""):
    """Sets an alarm for a specified time.

    Args:
        context: The context object provided by Praxis.  Includes context.speak(str) for output and context.current_user_name for user identification.
        alarm_time: The time for the alarm in HH:MM format (24-hour clock).
        alarm_description: An optional description or label for the alarm.
    """
    try:
        time_obj = datetime.datetime.strptime(alarm_time, "%H:%M")
        alarm_time_formatted = time_obj.strftime("%H:%M")  #Ensure correct format

        # Placeholder for alarm storage - In a real system, this would persist data (database, file, etc.)
        alarms = {}
        if context.current_user_name not in alarms:
          alarms[context.current_user_name] = []
        alarms[context.current_user_name].append({"time": alarm_time_formatted, "description": alarm_description})


        message = f"Alarm set for {alarm_time_formatted} for {context.current_user_name}."
        if alarm_description:
            message += f" Description: {alarm_description}"
        context.speak(message)
        logging.info(f"Alarm set: {alarm_time_formatted} - {alarm_description}")

    except ValueError:
        context.speak("Invalid time format. Please use HH:MM (24-hour clock).")
        logging.error("Invalid time format provided.")


def _test_skill(context: Any):
    """Tests the newly_learned_skill function."""
    logging.info("Starting test for set_alarm_skill")
    newly_learned_skill(context, "14:30", "Meeting with Bob")
    logging.info("Testing with invalid format")
    newly_learned_skill(context, "25:75")  #Invalid format
    logging.info("Testing without description")
    newly_learned_skill(context, "10:00")
    logging.info("Test completed.")